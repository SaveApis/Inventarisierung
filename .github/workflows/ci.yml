name: CI
on:
  push:
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/ci.yml'

jobs:
  build-csharp:
    name: Build (C#)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: 9.0.x
      - name: Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            **/obj
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup Nuget Feeds
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          dotnet nuget add source https://nuget.pkg.github.com/SaveApis/index.json --name GitHub --username ${{ github.actor }} --password ${{ github.token }} --store-password-in-clear-text
          dotnet nuget add source ${{ secrets.HANGFIRE_ACE_URL }} --name Hangfire.ACE --username ${{ secrets.HANGFIRE_ACE_USER }} --password ${{ secrets.HANGFIRE_ACE_TOKEN }} --store-password-in-clear-text
          dotnet nuget add source ${{ secrets.HANGFIRE_PRO_URL }} --name Hangfire.Pro --username ${{ secrets.HANGFIRE_PRO_USER }} --password ${{ secrets.HANGFIRE_PRO_TOKEN }} --store-password-in-clear-text
      - name: Restore dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: dotnet restore .
      - name: Build
        run: dotnet build --no-restore --configuration Release src/Backend/Backend.csproj
  build-docker:
    needs: build-csharp
    name: Build (Docker)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3.4.0
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.9.0
      - name: Build Docker image
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          file: src/Backend/Dockerfile
          push: false
          tags: inventarisierung-backend:dev
          secrets: |
            github_user=${{ github.actor }}
            github_token=${{ github.token }}
            hangfire_ace_url=${{ secrets.HANGFIRE_ACE_URL }}
            hangfire_ace_user=${{ secrets.HANGFIRE_ACE_USER }}
            hangfire_ace_token=${{ secrets.HANGFIRE_ACE_TOKEN }}
            hangfire_pro_url=${{ secrets.HANGFIRE_PRO_URL }}
            hangfire_pro_user=${{ secrets.HANGFIRE_PRO_USER }}
            hangfire_pro_token=${{ secrets.HANGFIRE_PRO_TOKEN }}
  #test:
  #  needs: build-csharp
  #  name: Test
  #  runs-on: ubuntu-latest
  #  permissions:
  #    contents: read
  #    packages: read
  #  continue-on-error: true
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v4.2.2
  #    - name: Setup .NET Core
  #      uses: actions/setup-dotnet@v4.3.0
  #      with:
  #        dotnet-version: 9.0.x
  #    - name: Cache
  #      id: cache
  #      uses: actions/cache@v4
  #      with:
  #        path: |
  #          ~/.nuget/packages
  #          **/obj
  #        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
  #        restore-keys: |
  #          ${{ runner.os }}-nuget-
  #    - name: Setup Nuget Feeds
  #      if: steps.cache.outputs.cache-hit != 'true'
  #      run: |
  #        dotnet nuget add source https://nuget.pkg.github.com/SaveApis/index.json --name GitHub --username ${{ github.actor }} --password ${{ github.token }} --store-password-in-clear-text
  #        dotnet nuget add source ${{ secrets.HANGFIRE_ACE_URL }} --name Hangfire.ACE --username ${{ secrets.HANGFIRE_ACE_USER }} --password ${{ secrets.HANGFIRE_ACE_TOKEN }} --store-password-in-clear-text
  #        dotnet nuget add source ${{ secrets.HANGFIRE_PRO_URL }} --name Hangfire.Pro --username ${{ secrets.HANGFIRE_PRO_USER }} --password ${{ secrets.HANGFIRE_PRO_TOKEN }} --store-password-in-clear-text
  #    - name: Test
  #      run: dotnet test
      